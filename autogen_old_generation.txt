/*int listindex = 0;
                foreach (String type in types)
                {
                    IPData newip = new IPData(cai.IPAddress, sources[listindex]);
                    string[] parts = type.Split('\t');
                    newip.MAC = cai.MacAddress;
                    newip.Node = parts[0];
                    newip.Type = parts[1];
                    newip.MQTTPay = mqttpay;
                    iplist.Add(newip);

                    /* Update window for added IP
                    DataRow dr = parent.results.NewRow();

                    dr["IP Address"] = newip.IPAddress;
                    dr["OTA Payload"] = sources[count];
                    dr["Delivery Method"] = "MQTT";
                    dr["OTA Type"] = type;
                    dr["OTA Result"] = "PENDING";
                    parent.results.Rows.Add(dr);
                    listindex++;
                }
                //Write info to log
                if (!File.Exists(parent.TB_LogDir.Text + "\\" + "AUTOGEN_Payload_List_" + DateTime.Now.ToString("MMddyyhhmmss") + ".csv"))
                {

                    // Verify directory exists, if not, throw exception
                    string curfilename = parent.TB_LogDir.Text + "\\" + "AUTOGEN_Payload_List_" + DateTime.Now.ToString("MMddyyhhmmss") + ".csv";
                    try
                    {
                        using (StreamWriter sw = File.CreateText(curfilename))
                        {
                            string content = "";
                            listindex = 0;
                            sw.WriteLine("IP\tOTA_Payload\tNode\tType\tCycle_Payload\tName\tMAC\tCycle_Wait\tWait_Type");
                            
                            for (int i = 0; i < (sources.Count / 2); i++)
                            {
                                for (int count = 0; count < TESTCASEMAX; count++)
                                {

                                    switch (count)
                                    {                                        
                                        //Start of - 131812 - OTA : Generic : Forced Update : Unit in Idle State
                                        //Set OTA upgrade
                                        /*case 0:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131812 - OTA : Generic : Forced Update : Unit in Idle State - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 1:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131812 - OTA : Generic : Forced Update : Unit in Idle State - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131812 - OTA : Generic : Forced Update : Unit in Idle State

                                        //Start of - 131813 - OTA : Generic : Forced Update : Unit in Programming State
                                        //Set Programming state -TODOGET THIS WORKING
                                         case 2: 
                                             content = iplist[listindex].IPAddress + "\t" +
                                                       "No OTA Payload - Non-OTA Cycle" + "\t" + //Not a ota do not save
                                                       iplist[listindex].Node + "\t" +
                                                       "Cycle" + "\t" +
                                                       iplist[listindex].MQTTPay + "\t" +
                                                       "RQM 131813 - OTA : Generic : Forced Update : Unit in Programming State - Part 1" + "\t" +
                                                       iplist[listindex].MAC + "\t" +
                                                       "25" + "\t" +
                                                       "";
                                             break;

                                         //Set OTA upgrade
                                         case 3:
                                             content = iplist[listindex].IPAddress + "\t" +
                                                       iplist[listindex].Payload + "\t" +
                                                       iplist[listindex].Node + "\t" +
                                                       iplist[listindex].Type + "\t" +
                                                       "NA" + "\t" + //Not a cycle do not save
                                                       "RQM 131813 - OTA : Generic : Forced Update : Unit in Programming State - Part 2" + "\t" +
                                                       iplist[listindex].MAC + "\t" +
                                                       "0" + "\t" +
                                                       "";
                                             break;
                                         //Set OTA  downgrade (return to SOP)
                                         case 4:
                                             content = iplist[listindex+1].IPAddress + "\t" +
                                                       iplist[listindex+1].Payload + "\t" +
                                                       iplist[listindex+1].Node + "\t" +
                                                       iplist[listindex+1].Type + "\t" +
                                                       "NA" + "\t" + //Not a cycle do not save
                                                       "RQM 131813 - OTA : Generic : Forced Update : Unit in Programming State - Part 3" + "\t" +
                                                       iplist[listindex].MAC + "\t" +
                                                       "0" + "\t" +
                                                       "";
                                             break;
                                        //End of - 131813 - OTA : Generic : Forced Update : Unit in Programming State

                                        //Start of - 131814 - OTA : Generic : Forced Update : Unit in Running State
                                        case 5:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      "No OTA Payload - Non-OTA Cycle" + "\t" + //Not an ota do not save
                                                      iplist[listindex].Node + "\t" +
                                                      "Cycle" + "\t" +
                                                      iplist[listindex].MQTTPay + "\t" +
                                                      "RQM 131814 - OTA : Generic : Forced Update : Unit in Running State - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "25000" + "\t" +
                                                      "";
                                            break;

                                        //Set OTA upgrade
                                        case 6:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131814 - OTA : Generic : Forced Update : Unit in Running State - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 7:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131814 - OTA : Generic : Forced Update : Unit in Running State  - Part 3" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131814 - OTA : Generic : Forced Update : Unit in Running State

                                        //Start of - 131815 - OTA : Generic : Forced Update : Unit in Post-Cycle Running State
                                        case 8:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      "No OTA Payload - Non-OTA Cycle" + "\t" + //Not an ota do not save
                                                      iplist[listindex].Node + "\t" +
                                                      "Cycle" + "\t" +
                                                      iplist[listindex].MQTTPay + "\t" +
                                                      "RQM 131815 - OTA : Generic : Forced Update : Unit in Post-Cycle Running State - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "70000" + "\t" +
                                                      "";
                                            break;

                                        //Set OTA upgrade
                                        case 9:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131815 - OTA : Generic : Forced Update : Unit in Post-Cycle Running State - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 10:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131815 - OTA : Generic : Forced Update : Unit in Post-Cycle Running State  - Part 3" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131815 - OTA : Generic : Forced Update : Unit in Post-Cycle Running State


                                        //Start of - 131816 - OTA : Generic : Forced Update : Unit in Non-Running Complete State
                                        case 11:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      "No OTA Payload - Non-OTA Cycle" + "\t" + //Not an ota do not save
                                                      iplist[listindex].Node + "\t" +
                                                      "Cycle" + "\t" +
                                                      iplist[listindex].MQTTPay + "\t" +
                                                      "RQM 131816 - OTA : Generic : Forced Update : Unit in Non-Running Complete State - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "360000" + "\t" +
                                                      "";
                                            break;

                                        //Set OTA upgrade
                                        case 12:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131816 - OTA : Generic : Forced Update : Unit in Non-Running Complete State - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 13:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131816 - OTA : Generic : Forced Update : Unit in Non-Running Complete State  - Part 3" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131815 - OTA : Generic : Forced Update : Unit in Non-Running Complete State


                                        //Start of - 131817 - OTA : Generic : Forced Update : Unit in Low Power Idle State
                                        case 14:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      "No OTA Payload - Wait Till Low Power Idle State" + "\t" + //Not an ota do not save
                                                      iplist[listindex].Node + "\t" +
                                                      "Wait" + "\t" +
                                                      "NA" + "\t" +
                                                      "RQM 131817 - OTA : Generic : Forced Update : Unit in Low Power Idle State - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "360000" + "\t" +
                                                      "";
                                            break;

                                        //Set OTA upgrade
                                        case 15:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131817 - OTA : Generic : Forced Update : Unit in Low Power Idle State - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 16:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131817 - OTA : Generic : Forced Update : Unit in Low Power Idle State  - Part 3" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131817 - OTA : Generic : Forced Update : Unit in Low Power Idle State

                                        //Start of - 131821 - OTA : Generic : Forced Update : HMI Update
                                        //Set OTA upgrade
                                        case 17:
                                            if (!TB_HMI_UP.Text.Equals(""))
                                                content = iplist[listindex].IPAddress + "\t" +
                                                      TB_HMI_UP.Text + "\t" +
                                                      "HMI" + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131821 - OTA : Generic : Forced Update : HMI Update - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            else
                                                content = null;
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 18:
                                            if (!TB_HMI_DWN.Text.Equals(""))
                                                content = iplist[listindex + 1].IPAddress + "\t" +
                                                      TB_HMI_DWN.Text + "\t" +
                                                      "HMI" + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131821 - OTA : Generic : Forced Update : HMI Update - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            else
                                                content = null;
                                            break;
                                        //End of - 131821 - OTA : Generic : Forced Update : HMI Update

                                        //Start of - 131822 - OTA : Generic : Forced Update : ACU Update
                                        //Set OTA upgrade
                                        case 19:
                                            if (!TB_ACU_UP.Text.Equals(""))
                                                content = iplist[listindex].IPAddress + "\t" +
                                                      TB_ACU_UP.Text + "\t" +
                                                      "ACU" + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131822 - OTA : Generic : Forced Update : ACU Update - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            else
                                                content = null;
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 20:
                                            if (!TB_ACU_DWN.Text.Equals(""))
                                                content = iplist[listindex + 1].IPAddress + "\t" +
                                                      TB_ACU_DWN.Text + "\t" +
                                                      "ACU" + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131822 - OTA : Generic : Forced Update : ACU Update - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            else
                                                content = null;
                                            break;
                                        //End of - 131822 - OTA : Generic : Forced Update : ACU Update

                                        //Start of - 131835 - OTA : Downloading : Forced Update : User starts cycle from App
                                        //Set OTA upgrade
                                        case 21:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      iplist[listindex].MQTTPay + "\t" +
                                                      "RQM 131835 - OTA : Downloading : Forced Update : User Starts Cycle from App - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "3000" + "\t" +
                                                      "Cycle";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 22:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131835 - OTA : Downloading : Forced Update : User Starts Cycle from App - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131835 - OTA : Downloading : Forced Update : User starts cycle from App

                                        //Start of - 131837 - OTA : Downloading : Forced Update : User Changes Settings from App
                                        //Set OTA upgrade
                                        case 23:
                                            content = iplist[listindex].IPAddress + "\t" +
                                                      iplist[listindex].Payload + "\t" +
                                                      iplist[listindex].Node + "\t" +
                                                      iplist[listindex].Type + "\t" +
                                                      "0021FF333301070001323031392D30312D30315431393A33323A34382B30303A303000" + "\t" +
                                                      "RQM 131837 - OTA : Downloading : Forced Update : User Changes Settings from App - Part 1" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "3000" + "\t" +
                                                      "Setting";
                                            break;
                                        //Set OTA  downgrade (return to SOP)
                                        case 24:
                                            content = iplist[listindex + 1].IPAddress + "\t" +
                                                      iplist[listindex + 1].Payload + "\t" +
                                                      iplist[listindex + 1].Node + "\t" +
                                                      iplist[listindex + 1].Type + "\t" +
                                                      "NA" + "\t" + //Not a cycle do not save
                                                      "RQM 131837 - OTA : Downloading : Forced Update : User Changes Settings from App - Part 2" + "\t" +
                                                      iplist[listindex].MAC + "\t" +
                                                      "0" + "\t" +
                                                      "";
                                            break;
                                        //End of - 131837 - OTA : Downloading : Forced Update : User Changes Settings from App
                                        
                                        default:
                                            content = null;
                                            break;

                                    }

                                    if (content != null)
                                        sw.WriteLine(content);

                                }

                                //Bound checking to control max possible bundle sources is iterated max number of node times
                                if ((listindex / 2) + 1 < sources.Count / 2)
                                    listindex += 2;
                            }

                        }

                        MessageBox.Show("AutoGeneration has been completed for " + TB_IP.Text + " with the payload list saved at " + curfilename + ".", "AutoGenerate: Generation Complete.",
                        MessageBoxButtons.OK, MessageBoxIcon.Information);
                        iplist.Clear();
                        sources.Clear();
                        types.Clear();

                    }
                    catch
                    {
                        MessageBox.Show("The chosen directory path does not exist. Please browse to a path that DOES exist and try again.", "Error: Directory Path Not Found",
                        MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return;
                    }

                }*/